@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');

.App {
  font-family: 'Inconsolata', monospace;
}

header {
  text-align: center;
  background: #282c34;
  color: white;
  font-size: calc(10px + 2vmin);
  height: 100vh;

  display: flex;
  flex-direction: column;
  justify-content: stretch;
  align-items: stretch;

  .picture {
    width: 200px;
    height: 200px;
    object-fit: cover;

    border: white 5px solid;
    border-radius: 100%;

    margin: 30px;
  }

  .content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex: auto;
    z-index: 1;
  }

  h1, h2 {
    margin: 0;
    font-weight: 550;
  }

  h2 {
    color: #AAA;
  }

  .see-more {
    opacity: 0.5;
  }
}

.App-content {
  min-height: 1000px;
}

.btn-array {
  display: flex;
  align-content: stretch;
  align-items: stretch;
  width: 100%;

  @media (max-width : 600px) {
    flex-direction: column;
  }

  .btn {
    flex-grow: 1;
    padding: 20px;
    background-color: #1e293f;
    text-decoration: none;
    color: white;
    text-align: center;
    font-size: 24px;

    transition: background-color 800ms;

    &:hover {
      background-color: #293755;
    }
  }
}


// Particles

.particle-container {
  position: absolute;
  width: 100%;
  height: 100%;

  overflow: hidden;

  opacity: 0.1;
}

.particle {
  $particleNum: 300;

  position: absolute;
  transform: translateY(-10vh);
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  border-radius: 100%;
  mix-blend-mode: screen;
  background: white;
  
  @for $i from 1 through $particleNum {
    &:nth-child(#{$i}) {
      $circleSize: 8 + random(3);
      width: $circleSize + px;
      height: $circleSize + px;

      $startPositionY: random(10) + 100;
      $framesName: "move-frames-" + $i;
      $moveDuration: 88000 + random(16000) + ms;

      animation-name: #{$framesName};
      animation-duration: $moveDuration;
      animation-delay: random(87000) - 40000 + ms; // Negative values let the particles start before
      animation-iteration-count: infinite;

      @keyframes #{$framesName} {
        from {
          transform: translate3d(
            #{random(130) - 15 + vw},
            #{$startPositionY + vh},
            0
          );
        }

        to {
          transform: translate3d(
            #{random(100) + vw},
            #{- $startPositionY - random(30) + vh},
            0
          );
        }
      }
    }
  }
}